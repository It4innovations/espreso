

Run the ESPRESO
===============

After the successful `installation <installation.html>`__
and setting the `environment <installation.html#set-up-the-environment>`__,
there is an executable file ``espreso`` in the main directory.
The following sections describe how to use and execute the ESPRESO.

Create configuration file
-------------------------

The ESPRESO solver is controlled by '\*.ecf' scripts (**E**\ SPRESO **c**\ onfiguration **f**\ ile).
Some examples can be found in 'benchmarks' directory or in 'tests/examples'.
In default ESPRESO loads 'espreso.ecf' from the root directory.
A different configuration file can be set by: ::

  $ ./espreso -c path/to/configuration.ecf


A configuration file is case-insensitive and supports C/C++ style comments (`//` or `/* .. */`).
The file is composed from parameters and objects with the following pattern: ::

  OBJECT {
    PARAMETER VALUE;
  }

A default one can be generated by: ::

  $ ./espreso --default

Besides default parameters, the file also contains parameters descriptions and allowed values.
Currently, we are working on some GUI for composing configuration files.
However, now the best pattern for writing the configuration files is to copy and update files in ESPRESO repository.
Directories with prepared configuration files are the following:

  - benchmarks/diffusion2D/
  - benchmarks/advectionDiffusion2D/
  - benchmarks/diffusion3D/
  - benchmarks/advectionDiffusion3D/
  - benchmarks/linearElasticity2D/
  - benchmarks/linearElasticity3D/
  - benchmarks/transient

  - tests/examples/input/workbench/
  - tests/examples/input/openfoam/


Specification of a problem
--------------------------

ESPRESO supports a problem description in two widely used formats: `Ansys Workbench <http://www.ansys.com/>`__ and `OpenFOAM <http://www.openfoam.com/>`__.
In addition, ESPRESO have a general `API <api.html>`__ that allows third party applications to use ESPRESO as a parallel linear solver.
For testing and development purposes ESPRESO also contains a problem generator.

Ansys
^^^^^

ESPRESO can open database files in `Ansys Workbench <http://www.ansys.com/Products/Platform>`__ format and solve the problems they describe. If the problem is relativelly small, round 5 million unknowns, it can be solved on a single compute node/workstation with 64 GB of RAM. 

ESPRESO is designed to solve large problems using supercomputers with many compute nodes. To run the solver on multiple compute nodes the original database file needs to decomposed (using the domain decomposition approach) into multiple database files. 

For this decomposition, the ESPRESO contains a ``decomposer`` tool. The ``depomposer`` is automatically compiled during the installation process.
It is executed on a single compute node or workstation preferably with large amount of main memory. It loads the Ansys database file and save the decomposed problem into files using the ESPRESO internal binary format suitable for parallel loading.

The ``decomposer`` is controlled similarly to ESPRESO by a configuration file.
A simple configuration file can look like this: ::

  INPUT  WORKBENCH;
  
  WORKBENCH {
    PATH     workbench.dat;
    DOMAINS              1;
  }
  
  DECOMPOSER {
    PARTS    "32 64 128";
    PREFIX   decomposition;
  }


The above example loads ``workbench.dat`` and creates three directories: ``decomposition32``, ``decomposition64``, and ``decomposition128``.
The directories contain the ``workbench.dat`` example decomposed into 32, 64, and 128 parts.

OpenFOAM
^^^^^^^^

OpenFOAM examples can be solved similarly to Ansys.
Advantage of OpenFOAM is ability to direct generation of a parallel format.
Hence, it is possible to solve large problems without decomposer.


Problem generator
^^^^^^^^^^^^^^^^^

Is a tool which generates a mesh with an arbitrary number of elements of particular type.
It is the key tool for the solver scalability tests on the masivelly parallel machines as it is able to generate a multi-billion problem in several seconds. 
Internally, it is also widely used for the development and testing of the new features.
All benchmarks configuration files use generator as input.

Check the results
-----------------

Each run of ESPRESO creates directory with results: ::

  results/{name of *.ecf file}/{date time}/

For easiest access to the last results, also the folowing link is created: ::

  results/last/

The directory contains the following data:

\*.ecf
  copy of the configuration file

\*.log
  everything printed to output is also put to this file

PRE_POST_DATA/
  resulting data computed by ESPRESO

**solution.pvd**
  visualization of solution openable in Paraview (can be changed in configuration file)

settings.pvd
  visualization of input parameters openable in Paraview (can be changed in configuration file)

feti_data.pvd
  visualization of FETI data openable in Paraview (can be changed in configuration file)

debug/
  debug information (input matrices for linear solver, ...)

.. warning ::
  The results stored by ESPRESO can have huge size.
  It is highly recommended to remove the useless data.



