
stages:
  - build
  - solver
  - release

.ws_build:
  stage: build
  tags:
    - ws

.ws_foss:
  extends: .ws_build
  before_script:
    - export CXX=mpic++

.ws_mkl:
  extends: .ws_build
  before_script:
    - export CXX=mpic++
    - export CPATH=/usr/include/mkl:$CPATH

.ws_intel:
  extends: .ws_build
  before_script:
    - . env/modules.workstation.icpc

.ws_solver_foss:
  extends: .ws_foss
  stage: solver
  only:
    refs:
      - schedules

.ws_solver_mkl:
  extends: .ws_mkl
  stage: solver
  only:
    refs:
      - schedules

.ws_solver_intel:
  extends: .ws_intel
  stage: solver
  only:
    refs:
      - schedules

.WS_DUMMY:
  extends: .ws_foss
  script:
    - sh tests/scripts/dummy.sh -j8

.WS_FOSS:
  extends: .ws_foss
  script:
    - sh tests/scripts/basic.sh -j8

.WS_MKL:
  extends: .ws_mkl
  script:
    - sh tests/scripts/basic.sh -j8

.WS_INTEL:
  extends: .ws_intel
  script:
    - sh tests/scripts/basic.sh -j8

.WS_ASSEMBLER:
  extends: .ws_solver_intel
  script:
    - sh tests/scripts/assembler.sh -j8

.WS_PHYSICAL_SOLVER:
  extends: .ws_solver_intel
  script:
    - sh tests/scripts/physical_solver.sh -j8

.WS_FETI:
  extends: .ws_solver_foss
  script:
    - sh tests/scripts/feti.sh -j8

.cs_build:
  stage: build
  tags:
    - cs
  before_script:
    - salloc -A $PROJECT_ID -p p01-arm -N 1 -n 48 -J $CI_JOB_ID --no-shell
    - export SLURM_JOB_ID="$(squeue -o %A -h -t R -n $CI_JOB_ID)"
    - sh dependencies/clone.all.sh
    - export PATH=/mnt/proj3/open-28-64/gitlab-runner/aarch64/nose2/bin/:$PATH
    - echo "#!/bin/bash" >> job.$CI_JOB_ID.sh
    - echo ". env/it4i.cs.a64fx.modulepath.sh" >> job.$CI_JOB_ID.sh
  after_script:
    - scancel "$(squeue -o %A -h -t R -n $CI_JOB_ID)"

CS_FOSS32:
  extends: .cs_build
  script:
    - echo ". env/it4i.cs.a64fx.openmpi.32.sh" >> job.$CI_JOB_ID.sh
    - echo "./waf configure" >> job.$CI_JOB_ID.sh
    - echo "./waf" >> job.$CI_JOB_ID.sh
    - echo "sh tests/run.basic.sh" >> job.$CI_JOB_ID.sh
    - srun sh job.$CI_JOB_ID.sh

CS_FOSS64:
  extends: .cs_build
  script:
    - echo ". env/it4i.cs.a64fx.openmpi.64.sh" >> job.$CI_JOB_ID.sh
    - echo "./waf configure --intwidth=64" >> job.$CI_JOB_ID.sh
    - echo "./waf" >> job.$CI_JOB_ID.sh
    - echo "sh tests/run.basic.sh" >> job.$CI_JOB_ID.sh
    - srun sh job.$CI_JOB_ID.sh

.GITHUB:
  stage: release
  script:
    - if ! git remote | grep release > /dev/null; then
        git remote add release git@github.com:It4innovations/espreso.git;
      fi
