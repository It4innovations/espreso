
stages:
  - DUMMY
  - INTEL_32
  - INTEL_64
  - FOSS_32
  - FOSS_64
  - MKL_32
  - MKL_64
  - CS01_A64FX
  - CS03_AMD_MI100
  - CS08_AMD_L3
  - CS10_SPR_HBM
  - CS11_NVIDIA_GRACE

.ws:
  when: always
  tags:
    - ws
  script:
    - ./waf configure
    - ./waf -j8

# ----------------------------------------------------------------------------------------------- #
#                        DUMMY INSTALATION WITHOUT ANY THIRD-PARTY LIBRARY                        #
# ----------------------------------------------------------------------------------------------- #

D4W_INSTALL:
  extends: .ws
  stage: DUMMY
  cache:
    key: deps-dummy-32
    paths:
      - dependencies
      - build
  before_script:
    - . env/workstation.foss.32.sh
  script:
    - ./waf configure --skip-suitesparse --skip-mkl --skip-blas --skip-lapack
    - ./waf -j8

D8W_INSTALL:
  extends: .ws
  stage: DUMMY
  cache:
    key: deps-dummy-64
    paths:
      - dependencies
      - build
  before_script:
    - . env/workstation.foss.64.sh
  script:
    - ./waf configure --skip-suitesparse --skip-mkl --skip-blas --skip-lapack
    - ./waf -j8

# ----------------------------------------------------------------------------------------------- #
#                                     INTEL MPI + INTEL MKL                                       #
# ----------------------------------------------------------------------------------------------- #

I4W_INSTALL:
  extends: .ws
  stage: INTEL_32
  cache:
    key: deps-intel-32
    paths:
      - dependencies
      - build
  before_script:
    - . env/workstation.intel.32.sh

I4W_BASIC:
  extends: I4W_INSTALL
  needs: ["I4W_INSTALL"]
  script:
    - sh tests/run.basic.sh

I4W_ASSEMBLER:
  extends: I4W_INSTALL
  needs: ["I4W_INSTALL"]
  script:
    - sh tests/run.assembler.sh

I4W_PHYSICS:
  extends: I4W_INSTALL
  needs: ["I4W_INSTALL"]
  script:
    - sh tests/run.physical_solver.sh

I4W_FETI:
  extends: I4W_INSTALL
  needs: ["I4W_INSTALL"]
  script:
    - sh tests/run.feti.sh

I8W_INSTALL:
  extends: .ws
  stage: INTEL_64
  cache:
    key: deps-intel-64
    paths:
      - dependencies
      - build
  before_script:
    - . env/workstation.intel.64.sh

I8W_BASIC:
  extends: I8W_INSTALL
  needs: ["I8W_INSTALL"]
  script:
    - sh tests/run.basic.sh

I8W_ASSEMBLER:
  extends: I8W_INSTALL
  needs: ["I8W_INSTALL"]
  script:
    - sh tests/run.assembler.sh

I8W_PHYSICS:
  extends: I8W_INSTALL
  needs: ["I8W_INSTALL"]
  script:
    - sh tests/run.physical_solver.sh

I8W_FETI:
  extends: I8W_INSTALL
  needs: ["I8W_INSTALL"]
  script:
    - sh tests/run.feti.sh

# ----------------------------------------------------------------------------------------------- #
#                                    OPEN MPI + SUITESPARSE                                       #
# ----------------------------------------------------------------------------------------------- #

F4W_INSTALL:
  extends: .ws
  stage: FOSS_32
  cache:
    key: deps-foss-32
    paths:
      - dependencies
      - build
  before_script:
    - . env/workstation.foss.32.sh

F4W_BASIC:
  extends: F4W_INSTALL
  needs: ["F4W_INSTALL"]
  script:
    - sh tests/run.basic.sh

F4W_ASSEMBLER:
  extends: F4W_INSTALL
  needs: ["F4W_INSTALL"]
  script:
    - sh tests/run.assembler.sh

F4W_PHYSICS:
  extends: F4W_INSTALL
  needs: ["F4W_INSTALL"]
  script:
    - sh tests/run.physical_solver.sh

F4W_FETI:
  extends: F4W_INSTALL
  needs: ["F4W_INSTALL"]
  script:
    - sh tests/run.feti.sh

F8W_INSTALL:
  extends: .ws
  stage: FOSS_64
  cache:
    key: deps-foss-64
    paths:
      - dependencies
      - build
  before_script:
    - . env/workstation.foss.64.sh

F8W_BASIC:
  extends: F8W_INSTALL
  needs: ["F8W_INSTALL"]
  script:
    - sh tests/run.basic.sh

F8W_ASSEMBLER:
  extends: F8W_INSTALL
  needs: ["F8W_INSTALL"]
  script:
    - sh tests/run.assembler.sh

F8W_PHYSICS:
  extends: F8W_INSTALL
  needs: ["F8W_INSTALL"]
  script:
    - sh tests/run.physical_solver.sh

F8W_FETI:
  extends: F8W_INSTALL
  needs: ["F8W_INSTALL"]
  script:
    - sh tests/run.feti.sh

# ----------------------------------------------------------------------------------------------- #
#                                         OPEN MPI + MKL                                          #
# ----------------------------------------------------------------------------------------------- #

M4W_INSTALL:
  extends: .ws
  stage: MKL_32
  cache:
    key: deps-mkl-32
    paths:
      - dependencies
      - build
  before_script:
    - . env/workstation.openmpi.mkl.32.sh

M4W_BASIC:
  extends: M4W_INSTALL
  needs: ["M4W_INSTALL"]
  script:
    - sh tests/run.basic.sh

M4W_ASSEMBLER:
  extends: M4W_INSTALL
  needs: ["M4W_INSTALL"]
  script:
    - sh tests/run.assembler.sh

M4W_PHYSICS:
  extends: M4W_INSTALL
  needs: ["M4W_INSTALL"]
  script:
    - sh tests/run.physical_solver.sh

M4W_FETI:
  extends: M4W_INSTALL
  needs: ["M4W_INSTALL"]
  script:
    - sh tests/run.feti.sh

M8W_INSTALL:
  extends: .ws
  stage: MKL_64
  cache:
    key: deps-mkl-64
    paths:
      - dependencies
      - build
  before_script:
    - . env/workstation.openmpi.mkl.64.sh

M8W_BASIC:
  extends: M8W_INSTALL
  needs: ["M8W_INSTALL"]
  script:
    - sh tests/run.basic.sh

M8W_ASSEMBLER:
  extends: M8W_INSTALL
  needs: ["M8W_INSTALL"]
  script:
    - sh tests/run.assembler.sh

M8W_PHYSICS:
  extends: M8W_INSTALL
  needs: ["M8W_INSTALL"]
  script:
    - sh tests/run.physical_solver.sh

M8W_FETI:
  extends: M8W_INSTALL
  needs: ["M8W_INSTALL"]
  script:
    - sh tests/run.feti.sh

# ----------------------------------------------------------------------------------------------- #
#                                       COMPLEMENTARY SYSTEMS                                     #
# ----------------------------------------------------------------------------------------------- #

.cs:
  when: always
  id_tokens:
    SITE_ID_TOKEN:
      aud: https://code.it4i.cz/
  tags:
    - it4i
    - compsys
    - slurmjob
  variables:
    CUSTOM_CI_BUILDS_DIR: /mnt/proj3/open-28-64
  stage: COMPSYS
  script:
    - ./waf configure
    - ./waf -j8

CS01_INSTALL:
  extends: .cs
  stage: CS01_A64FX
  variables:
    SCHEDULER_PARAMETERS: '-A OPEN-28-64 -p p01-arm -N 1 --ntasks-per-node=48'
  cache:
    key: deps-cs01
    paths:
      - dependencies
      - build
  before_script:
    - . env/it4i.cs.p01.a64fx.32.sh

CS01_BASIC:
  extends: CS01_INSTALL
  needs: ["CS01_INSTALL"]
  script:
    - sh tests/run.basic.sh


CS03_INSTALL:
  extends: .cs
  stage: CS03_AMD_MI100
  variables:
    SCHEDULER_PARAMETERS: '-A OPEN-28-64 -p p03-amd -N 1 --ntasks-per-node=64 -G 4'
  cache:
    key: deps-cs03
    paths:
      - dependencies
      - build
  before_script:
    - . env/it4i.cs.p03.amd.mi100.32.sh

CS03_BASIC:
  extends: CS03_INSTALL
  needs: ["CS03_INSTALL"]
  script:
    - sh tests/run.basic.sh


CS08_INSTALL:
  extends: .cs
  stage: CS08_AMD_L3
  variables:
    SCHEDULER_PARAMETERS: '-A OPEN-28-64 -p p08-amd -N 1 --ntasks-per-node=128'
  cache:
    key: deps-cs08
    paths:
      - dependencies
      - build
  before_script:
    - . env/it4i.cs.p08.amd.l3.32.sh

CS08_BASIC:
  extends: CS08_INSTALL
  needs: ["CS08_INSTALL"]
  script:
    - sh tests/run.basic.sh


.CS10_INSTALL:
  extends: .cs
  stage: CS10_SPR_HBM
  variables:
    SCHEDULER_PARAMETERS: '-A OPEN-28-64 -p p10-intel -N 1 --ntasks-per-node=96'
  cache:
    key: deps-cs10
    paths:
      - dependencies
      - build
  before_script:
    - . env/it4i.cs.p10.spr.hbm.32.sh

.CS10_BASIC:
  extends: .CS10_INSTALL
  needs: [".CS10_INSTALL"]
  script:
    - sh tests/run.basic.sh


.CS11_INSTALL:
  extends: .cs
  stage: CS11_NVIDIA_GRACE
  variables:
    SCHEDULER_PARAMETERS: '-A OPEN-28-64 -p p11-grace -N 1 --ntasks-per-node=144'
  cache:
    key: deps-cs11
    paths:
      - dependencies
      - build
  before_script:
    - . env/it4i.cs.p11.nvidia.grace.32.sh

.CS11_BASIC:
  extends: .CS11_INSTALL
  needs: [".CS11_INSTALL"]
  script:
    - sh tests/run.basic.sh

