
import os

def options(opt):
    sycl_targets_default = os.getenv("ESPRESO_SYCL_TARGETS")
    opt.compiler.add_option("--sycl-targets", action="store", type="string", default=sycl_targets_default, help="Targets to compile SYCL kernels for.")
    sycl_backend_options_default = os.getenv("ESPRESO_SYCL_BACKEND_OPTIONS")
    opt.compiler.add_option("--sycl-backend-options", action="store", type="string", default=sycl_backend_options_default, help="Options provided to the SYCL backend.")

def configure(ctx):
    # assuming only intel oneapi for now
    # assuming intel toolkit 2024+

    ctx.env.append_unique("CXXFLAGS", [ "-fsycl" ])
    ctx.env.append_unique("LINKFLAGS", [ "-fsycl" ])

    headers = [ "sycl/sycl.hpp", "dpct/dpct.hpp", "oneapi/mkl.hpp", "oneapi/dpl/execution", "oneapi/dpl/async" ]
    libs = [ "mkl_sycl_blas", "mkl_sycl_sparse", "mkl_core", "mkl_sequential", "mkl_intel_lp64" ]
    ctx.check_cxx(mandatory=False, msg="Checking for 'oneapi'", okmsg=" ".join(libs), define_name="HAVE_ONEAPI", header_name=headers, lib=libs, uselib_store="ONEAPI", global_define=0)

    ctx.env.CXXFLAGS.remove("-fsycl")
    ctx.env.LINKFLAGS.remove("-fsycl")

    if ctx.env.HAVE_ONEAPI:
        ctx.env.append_unique("CXXFLAGS_ONEAPI", [ "-fsycl" ])
        ctx.env.append_unique("LINKFLAGS_ONEAPI", [ "-fsycl" ])
        if ctx.options.sycl_targets != None:
            ctx.env.append_unique("CXXFLAGS_ONEAPI", [ "-fsycl-targets=" + ctx.options.sycl_targets ])
            ctx.env.append_unique("LINKFLAGS_ONEAPI", [ "-fsycl-targets=" + ctx.options.sycl_targets ])
        if ctx.options.sycl_backend_options != None:
            ctx.env.append_unique("LINKFLAGS_ONEAPI", [ "-Xs", ctx.options.sycl_backend_options ])
