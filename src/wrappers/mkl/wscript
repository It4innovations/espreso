
import os

def options(opt):
    opt.math.add_option("--skip-mkl", action="store_true", default=False, help="Skip search for MKL library.")

def configure(ctx):
    if (ctx.options.skip_mkl):
        return

    # currently it seems that there is a bug in OpenMP version (use gomp + gnu_threads)
    libs = []
    if ctx.options.cxx == "icpc":
        libs.append("gomp")
    libs.append("mkl_intel_lp64")
    libs.append("mkl_core")
    # if ctx.options.cxx == "icpc":
    #     libs.append("mkl_intel_thread")
    # if ctx.options.cxx == "g++":
    #     libs.append("mkl_gnu_thread")
    libs.append("mkl_sequential")

    if ctx.check_cxx(mandatory=False, msg="Checking for 'mkl'", okmsg=" ".join(libs), define_name="HAVE_MKL", header_name="mkl.h", lib=libs, uselib_store="MKL", global_define=0):
        ctx.env.append_unique("DEFINES_MKL", [ "MKL_INT=int", "MKL_Complex8=std::complex<float>", "MKL_Complex16=std::complex<double>" ])
