
def options(opt):
    opt.solvers.add_option("--mklpdss", action="store", type="string", metavar="MKLPDSS_ROOT", default="", help="Path to MKL PDSS library.")

def configure(ctx):
    prefix = 'mkl_blacs_'
    if ctx.options.intwidth == "32":
        suffix = '_lp64'
    if ctx.options.intwidth == "64":
        suffix = '_ilp64'

    if ctx.env.MPI == "Intel MPI":
        lib = prefix + "intelmpi" + suffix
    if ctx.env.MPI == "mpich":
        lib = prefix + "intelmpi" + suffix
    if ctx.env.MPI == "Open MPI":
        lib = prefix + "openmpi" + suffix

    if "HAVE_MKL" in ctx.env["DEFINES_MKL"]:
        ctx.link_cxx(name="mklpdss", header_name="mkl_cluster_sparse_solver.h", libs=lib, use="MKL", root=ctx.options.mklpdss)
