
def options(opt):
    pass

def configure(ctx):
    if ctx.options.intwidth == "64":
        return # denny 64-bit interface due to conflict with FETI  
    
    prefix = 'mkl_blacs_'
    if ctx.options.intwidth == "32":
        suffix = '_lp64'
    if ctx.options.intwidth == "64":
        suffix = '_ilp64'

    if ctx.env.COMPILER_CXX == "icpc":
        lib = prefix + "intelmpi" + suffix
    else:
        lib = prefix + "openmpi" + suffix

    if "HAVE_MKL" in ctx.env:
        ctx.env.append_unique("SHLIB_MARKER", "-Wl,--no-as-needed")
        ctx.check_cxx(mandatory=False, msg="Checking for 'mklpdss'", okmsg=lib, define_name="HAVE_MKLPDSS", header_name="complex mkl_cluster_sparse_solver.h", lib=lib, use="MKL", uselib_store="MKLPDSS", global_define=0)
